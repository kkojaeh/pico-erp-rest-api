buildscript {
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
    classpath("net.ltgt.gradle:gradle-apt-plugin:0.18")
    classpath("com.bmuschko:gradle-clover-plugin:2.1.3")
    classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
    classpath("net.researchgate:gradle-release:2.6.0")
    classpath("gradle.plugin.io.github.divinespear:jpa-schema-gradle-plugin:0.3.5.1")
  }
  repositories {
    flatDir dirs: "${buildDir}/lib"
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    jcenter()
    google()
    maven {
      url "https://jitpack.io"
    }
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'net.ltgt.apt'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.researchgate.release'
apply plugin: 'io.github.divinespear.jpa-schema-generate'
apply plugin: 'org.springframework.boot'

ext {
  linkHomepage = 'https://kkojaeh.github.io/pico-erp-server/#/'
  linkCi = 'https://travis-ci.org/kkojaeh/pico-erp-rest-api'
  linkIssue = 'https://github.com/kkojaeh/pico-erp-rest-api/issues'
  linkScmUrl = 'https://github.com/kkojaeh/pico-erp-rest-api'
  linkScmConnection = 'scm:git:git://github.com/kkojaeh/pico-erp-rest-api.git'
  linkScmDevConnection = 'scm:git:ssh://git@github.com/kkojaeh/pico-erp-rest-api.git'
}

apply from: 'https://github.com/kkojaeh/pico-erp-gradle/raw/master/parent.gradle'
apply from: 'https://github.com/kkojaeh/pico-erp-gradle/raw/master/impl.gradle'

dependencies {

  compile("org.projectlombok:lombok:${lombokVersion}")

  // api
  compile("com.github.kkojaeh.pico-erp-shared:impl:${sharedVersion}")
  compile("com.github.kkojaeh.pico-erp-user:api:${userVersion}")
  compile("com.github.kkojaeh.pico-erp-audit:api:${auditVersion}")
  compile("com.github.kkojaeh.pico-erp-company:api:${companyVersion}")
  compile("com.github.kkojaeh.pico-erp-attachment:api:${attachmentVersion}")
  compile("com.github.kkojaeh.pico-erp-process:api:${processVersion}")
  compile("com.github.kkojaeh.pico-erp-project:api:${projectVersion}")
  compile("com.github.kkojaeh.pico-erp-quotation:api:${quotationVersion}")
  compile("com.github.kkojaeh.pico-erp-item:api:${itemVersion}")
  compile("com.github.kkojaeh.pico-erp-comment:api:${commentVersion}")
  compile("com.github.kkojaeh.pico-erp-facility:api:${facilityVersion}")
  compile("com.github.kkojaeh.pico-erp-work-schedule:api:${workScheduleVersion}")
  compile("com.github.kkojaeh.pico-erp-order-acceptance:api:${orderAcceptanceVersion}")
  compile("com.github.kkojaeh.pico-erp-warehouse:api:${warehouseVersion}")
  compile("com.github.kkojaeh.pico-erp-bom:api:${bomVersion}")
  compile("com.github.kkojaeh.pico-erp-purchase-request:api:${purchaseRequestVersion}")
  compile("com.github.kkojaeh.pico-erp-purchase-order:api:${purchaseOrderVersion}")
  compile("com.github.kkojaeh.pico-erp-purchase-invoice:api:${purchaseInvoiceVersion}")
  compile("com.github.kkojaeh.pico-erp-invoice:api:${invoiceVersion}")
  compile("com.github.kkojaeh.pico-erp-notify:api:${notifyVersion}")
  compile("com.github.kkojaeh.pico-erp-notify:mattermost:${notifyVersion}")


  compileOnly("com.github.kkojaeh.pico-erp-attachment:impl:${attachmentVersion}")
  compileOnly("com.github.kkojaeh.pico-erp-item:impl:${itemVersion}")
  compileOnly("com.github.kkojaeh.pico-erp-process:impl:${processVersion}")

  runtime("com.github.kkojaeh.pico-erp-company:test:${companyVersion}")

  runtime("com.github.kkojaeh.pico-erp-attachment:test:${attachmentVersion}")

  runtime("com.github.kkojaeh.pico-erp-process:test:${processVersion}")

  runtime("com.github.kkojaeh.pico-erp-project:test:${projectVersion}")

  runtime("com.github.kkojaeh.pico-erp-quotation:test:${quotationVersion}")

  runtime("com.github.kkojaeh.pico-erp-item:test:${itemVersion}")

  runtime("com.github.kkojaeh.pico-erp-comment:test:${commentVersion}")

  runtime("com.github.kkojaeh.pico-erp-work-schedule:test:${workScheduleVersion}")

  runtime("com.github.kkojaeh.pico-erp-bom:test:${bomVersion}")

  runtime("com.github.kkojaeh.pico-erp-user:test:${userVersion}")

  runtime("com.github.kkojaeh.pico-erp-audit:test:${auditVersion}")

  runtime("com.github.kkojaeh.pico-erp-order-acceptance:test:${orderAcceptanceVersion}")

  runtime("com.github.kkojaeh.pico-erp-facility:test:${facilityVersion}")

  runtime("com.github.kkojaeh.pico-erp-purchase-request:test:${purchaseRequestVersion}")

  runtime("com.github.kkojaeh.pico-erp-purchase-order:test:${purchaseOrderVersion}")

  runtime("com.github.kkojaeh.pico-erp-purchase-invoice:test:${purchaseInvoiceVersion}")

  runtime("com.github.kkojaeh.pico-erp-invoice:test:${invoiceVersion}")

  runtime("com.github.kkojaeh.pico-erp-warehouse:test:${warehouseVersion}")

  runtime("com.github.kkojaeh.pico-erp-notify:impl:${notifyVersion}")

  compile('com.google.firebase:firebase-admin:6.1.0')

  compile('org.springframework.boot:spring-boot-starter-actuator')

  compile('org.springframework.boot:spring-boot-starter-security')

  compile('io.springfox:springfox-swagger2:2.8.0')
  compile('io.springfox:springfox-data-rest:2.8.0')
  compile('io.springfox:springfox-swagger-ui:2.8.0')

  compile('com.amazonaws:aws-java-sdk-s3')

  compile('commons-fileupload:commons-fileupload:1.3.3')

  compile('io.sentry:sentry:1.7.5')

  compile('org.springframework.boot:spring-boot-starter-web')

  // hibernate second level cache by memcached for 5.2.x
  runtime('com.github.mihaicostin:hibernate-l2-memcached:5.2.10.0')

  runtime('mysql:mysql-connector-java')

}


release {
  failOnCommitNeeded = false
  failOnPublishNeeded = true
  failOnSnapshotDependencies = true
  failOnUnversionedFiles = true
  failOnUpdateNeeded = true
  revertOnFail = true
  preCommitText = ''
  preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
  tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
  newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
  tagTemplate = '${version}'
  versionPropertyFile = 'gradle.properties'
  versionProperties = []
  buildTasks = ['build']
  release {
    scmAdapters = [net.researchgate.release.GitAdapter]
  }

  git {
    requireBranch = 'master'
    pushToRemote = 'origin'
    pushToBranchPrefix = ''
    commitVersionFileOnly = false
  }
}

task "aws-elasticbeanstalk-artifact"(type: Zip) {
  doFirst {
    copy {
      from '.aws-elasticbeanstalk'
      into "${buildDir}/.aws-elasticbeanstalk"
    }
    copy {
      from('.aws-elasticbeanstalk') {
        include '.ebextensions/*'
        include 'Procfile'
      }
      into "${buildDir}/.aws-elasticbeanstalk"
      def props = [S3_FIREBASE_SERVICE_ACCOUNT_KEY_FILE_BUCKET: '', S3_FIREBASE_SERVICE_ACCOUNT_KEY_FILE_URL: '', S3_SCOUTER_CONF_FILE_BUCKET: '', S3_SCOUTER_CONF_FILE_URL: '', SCOUTER_OBJ_NAME: '']
      props << project.properties
      props << System.env
      expand(props)
    }
  }
  from "${buildDir}/.aws-elasticbeanstalk"
  from libsDir
  destinationDir = file("${buildDir}/aws-elasticbeanstalk")
  archiveName = "rest-api-server.zip"
}

bootJar {
  //duplicatesStrategy = DuplicatesStrategy.FAIL

  mainClassName = 'pico.erp.restapi.RestApiApplication'
  classifier = 'boot'
  // 파일 명 중복으로 인해 추가
  eachFile {
    details ->
      if(details.file.file && details.file.name.endsWith('.jar')){
        def groupName = details.file.parentFile.parentFile.parentFile.parentFile.name
        println "${groupName}-${details.name}"
        details.name = "${groupName}-${details.name}"
      }
  }
}
